(window.webpackJsonp=window.webpackJsonp||[]).push([[17],{632:function(t,s,a){"use strict";a.r(s);var e=a(5),r=Object(e.a)({},(function(){var t=this,s=t._self._c;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("p",[t._v("按照 GitHub 官方的"),s("a",{attrs:{href:"https://help.GitHub.com/articles/quick-start-setting-up-a-custom-domain/",target:"_blank",rel:"noopener noreferrer"}},[t._v("指导"),s("OutboundLink")],1),t._v("，如果我们想把自己购买的域名绑定到 GitHub pages 的页面，我们需要在仓库的设置中添加自己的域名，同时还需要在自己域名的经销商网站增加两条 A 类型的记录。我很好奇这些操作实际都做了什么，因此写下本文来说明这些操作的目的以及其意义。")]),t._v(" "),s("h2",{attrs:{id:"从问题出发"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#从问题出发"}},[t._v("#")]),t._v(" 从问题出发")]),t._v(" "),s("p",[t._v("首先我们知道，有一种叫做 CNAME 的 DNS 解析记录，当你给你的域名增加这种解析记录后，对你的域名的解析就会转换成对你所设定的域名的解析。比如我给我的域名 forelax.space 增加一条 CNAME 记录，记录的值为 jd.com ，那么访问我的域名，最终就会跳转到京东的首页。")]),t._v(" "),s("p",[t._v("因此，按照我最初的想法，我只要用增加一条 CNAME 记录的方式，把我的域名指向 GitHub pages 提供的域名 forelaxx.GitHub.io ，就可以顺利完成博客的域名绑定。")]),t._v(" "),s("p",[t._v("于是，兴致勃勃的我，在阿里云的控制中心，增加了这样一条记录，将 test.forelax.space 指向了 forelaxx.GitHub.io：")]),t._v(" "),s("p",[s("img",{attrs:{src:"/assets/images/2017-12-04-githubpages-with-dns/image-20200922134527369.png",alt:"image-20200922134527369"}})]),t._v(" "),s("p",[t._v("然而，当我访问 test.forelax.space 时，得到的却是一个 404 的页面：")]),t._v(" "),s("p",[s("img",{attrs:{src:"/assets/images/2017-12-04-githubpages-with-dns/image-20200922134535827.png",alt:"image-20200922134535827"}})]),t._v(" "),s("p",[t._v("此时，我并没有按照 GitHub 官方的说明那样，在仓库的设置页面设置我的域名：")]),t._v(" "),s("p",[s("img",{attrs:{src:"/assets/images/2017-12-04-githubpages-with-dns/image-20200922134543652.png",alt:"image-20200922134543652"}})]),t._v(" "),s("p",[t._v("神奇的是，当我在这里设置了我的域名，访问 forelax.space 就可以顺利跳转到 GitHub pages 的页面。那么，我们来继续探这背后的原理。")]),t._v(" "),s("h2",{attrs:{id:"探索原理"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#探索原理"}},[t._v("#")]),t._v(" 探索原理")]),t._v(" "),s("h3",{attrs:{id:"给-github-pages-的-custom-domain-设置域名后发生了什么"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#给-github-pages-的-custom-domain-设置域名后发生了什么"}},[t._v("#")]),t._v(" 给 GitHub Pages 的 Custom Domain 设置域名后发生了什么？")]),t._v(" "),s("p",[t._v("当我尝试删除然后重新填入这个设置项后，我发现我仓库中多出了两个 commit:")]),t._v(" "),s("p",[s("img",{attrs:{src:"/assets/images/2017-12-04-githubpages-with-dns/image-20200922134553566.png",alt:"image-20200922134553566"}})]),t._v(" "),s("p",[t._v("而文件的内容也很简单，就是我们填入的域名：")]),t._v(" "),s("p",[s("img",{attrs:{src:"/assets/images/2017-12-04-githubpages-with-dns/image-20200922134601246.png",alt:"image-20200922134601246"}})]),t._v(" "),s("p",[t._v("由此看来，这个设置项所做的，仅仅是修改了仓库的 master 分支的一个叫做 CNAME 的文件而已。那么 GitHub pages 会怎么使用这个文件？")]),t._v(" "),s("p",[t._v("要解决这个问题，我们要从最初购买域名时，发生的事情说起。")]),t._v(" "),s("h3",{attrs:{id:"当我在阿里云上购买了-forelax-space-这个域名后-发生了什么"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#当我在阿里云上购买了-forelax-space-这个域名后-发生了什么"}},[t._v("#")]),t._v(" 当我在阿里云上购买了 forelax.space 这个域名后，发生了什么？")]),t._v(" "),s("p",[t._v("在看这里之前，建议先看看 https://howdns.works 这个可爱的网站，重温一下 DNS 解析的过程。")]),t._v(" "),s("p",[t._v("当我在阿里云成功购买了域名后，阿里云通过自己域名经销商的身份，向 .space 域名服务器增加了两条解析记录。当有人向 .space 域名服务器询问 forelax.space 的 IP 地址的时候，就告诉询问者，我不知道这个域名的 IP 是多少，但是你可以去 dns17.hichina.com 或者 dns18.hichina.com 这两个域名对应的服务器去问一下，他们知道。")]),t._v(" "),s("p",[t._v("之所以是这两个服务器，时因为我在购买域名的时候，选择了默认的域名解析服务器，所以给 .space 域名服务器中添加的记录是阿里云自己的域名服务器。如果有能力自己搭建 DNS 服务器，也可以在阿里云的控制台把 DNS 解析服务器改成自己的 DNS 服务器的 IP。如下图：")]),t._v(" "),s("p",[s("img",{attrs:{src:"/assets/images/2017-12-04-githubpages-with-dns/image-20200922134610992.png",alt:"image-20200922134610992"}})]),t._v(" "),s("p",[t._v("以上过程是我的猜想，那么我们如何证实这个猜想呢？我们可以用 "),s("code",[t._v("dig +trace test.forelax.space")]),t._v(" 这个命令来看看域名解析过程中的每一步都发生了什么：")]),t._v(" "),s("blockquote",[s("p",[s("code",[t._v("dig")]),t._v(" 这个命令可以帮助我们发送解析域名的 DNS 协议包，同时将解析结果输出。这里的 +trace 表示将完整的解析过程都展示出来。")])]),t._v(" "),s("div",{staticClass:"language-sh extra-class"},[s("pre",{pre:!0,attrs:{class:"language-sh"}},[s("code",[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<<")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">>")]),t._v(" DiG "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("9.9")]),t._v(".7-P3 "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<<")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">>")]),t._v(" +trace test.forelax.space\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 上面只是输出 dig 的版本号以及我们这次命令的参数")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" global options: +cmd\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 上面表示 dig 这个命令默认还会加上 +cmd 选项")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v(".")]),t._v("\t\t\t"),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("63324")]),t._v("\tIN\tNS\te.root-servers.net.\n"),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v(".")]),t._v("\t\t\t"),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("63324")]),t._v("\tIN\tNS\ta.root-servers.net.\n"),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v(".")]),t._v("\t\t\t"),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("63324")]),t._v("\tIN\tNS\tc.root-servers.net.\n"),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v(".")]),t._v("\t\t\t"),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("63324")]),t._v("\tIN\tNS\tk.root-servers.net.\n"),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v(".")]),t._v("\t\t\t"),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("63324")]),t._v("\tIN\tNS\tl.root-servers.net.\n"),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v(".")]),t._v("\t\t\t"),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("63324")]),t._v("\tIN\tNS\tg.root-servers.net.\n"),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v(".")]),t._v("\t\t\t"),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("63324")]),t._v("\tIN\tNS\tf.root-servers.net.\n"),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v(".")]),t._v("\t\t\t"),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("63324")]),t._v("\tIN\tNS\tj.root-servers.net.\n"),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v(".")]),t._v("\t\t\t"),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("63324")]),t._v("\tIN\tNS\th.root-servers.net.\n"),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v(".")]),t._v("\t\t\t"),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("63324")]),t._v("\tIN\tNS\td.root-servers.net.\n"),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v(".")]),t._v("\t\t\t"),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("63324")]),t._v("\tIN\tNS\ti.root-servers.net.\n"),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v(".")]),t._v("\t\t\t"),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("63324")]),t._v("\tIN\tNS\tm.root-servers.net.\n"),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v(".")]),t._v("\t\t\t"),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("63324")]),t._v("\tIN\tNS\tb.root-servers.net.\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" Received "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("508")]),t._v(" bytes from "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("192.168")]),t._v(".31.1"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#53(192.168.31.1) in 38 ms")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 上面表示我们从本地的路由器中，得到了 13 台根 DNS 服务器的地址， 『.』 表示这是根服务器， 63324 表示 TTL，也就是这个信息还会缓存多久，在 63324s 内我们访问得到的还会是这个结果")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# IN 表示我们返回的是 IP 协议，基本上我们都是 IP 协议，所以可以忽略他")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# NS 表示这条记录是一个 Name Server 记录，告知请求者任何根目录以下的记录都可以找这个服务器")]),t._v("\nspace.\t\t\t"),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("172800")]),t._v("\tIN\tNS\ta.nic.space.\nspace.\t\t\t"),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("172800")]),t._v("\tIN\tNS\tb.nic.space.\nspace.\t\t\t"),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("172800")]),t._v("\tIN\tNS\tc.nic.space.\nspace.\t\t\t"),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("172800")]),t._v("\tIN\tNS\td.nic.space.\nspace.\t\t\t"),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("86400")]),t._v("\tIN\tDS\t"),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("44251")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("8")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v(" 36ACB68B734DFE465CC1112F9DAC08B8B66627CC\nspace.\t\t\t"),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("86400")]),t._v("\tIN\tDS\t"),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("44251")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("8")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),t._v(" A82D8ED2B07D66D6E7AF375E0E44B22A82F4479AD45F5D8E1859DF6F C170E67C\nspace.\t\t\t"),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("86400")]),t._v("\tIN\tRRSIG\tDS "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("8")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("86400")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("20171202050000")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("20171119040000")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("46809")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v(".")]),t._v(" Fg9GkuRICx7mfbOmfuQumQ5ofrxniMi4+lw0AKbE15CJO6Sqj8S1H45T 9LyVhdjxWZ5oRsLOG4YIJum7rAa1IlORTePVlSwLjwz1AuDDOdb603C4 ibqknFSkjYJgw82wTbx5K48SvWRUk8u7aIqvX29Tdl0YR/5FPicjOAvi 0hkRCir8vyg1DHebDNiKKl0/l2f4YJG9x2LUxdUYlRPHOwYbhgscMcJf 8q5TvqW4mC1BdfaysfwLUA1Uf+9qAO4y51QSnxAsXReZH5r296Er7/sQ 6pGigQXiGJhlm9etpKyzqtpe3EcK5TBVKcc6S8Xu2OLUSShbEx+3l9ga "),s("span",{pre:!0,attrs:{class:"token assign-left variable"}},[t._v("CBS0Fw")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" Received "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("657")]),t._v(" bytes from "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("198.41")]),t._v(".0.4"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#53(a.root-servers.net) in 500 ms")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 上面表示我们从 a.root-servers.net 这个根服务器中得知了 .space 这个域名服务器的记录")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 其中 DS 表示这是一条 DS 类型的 DNS 记录，可以暂时理解为一种添加时要求更高的记录类型，比如这里就比 NS 多了很多的数据，细节有兴趣可以去维基百科查查 List of DNS record types")]),t._v("\n\nforelax.space.\t\t"),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("3600")]),t._v("\tIN\tNS\tdns17.hichina.com.\nforelax.space.\t\t"),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("3600")]),t._v("\tIN\tNS\tdns18.hichina.com.\n0eldeflreldugqhaejqrp17ppn34aaqp.space.\t"),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("3600")]),t._v(" IN\tNSEC3 "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v(" - 0FIBQMPFM95T51I962J7PVBKHVQGF4Q1 NS SOA RRSIG DNSKEY NSEC3PARAM\n0eldeflreldugqhaejqrp17ppn34aaqp.space.\t"),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("3600")]),t._v(" IN\tRRSIG NSEC3 "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("8")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("3600")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("20171214211930")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("20171114215839")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("46195")]),t._v(" space. nUIuP4ZS4WyiF4vdrPYeasfWR54ckTK4NBybw0vI42ZwWbcMV8kdwd0J VVDcYhR2OQTImjSoy945LwmSEM1nyV72EwldpjCX/ynIWfyH8FLJtuQr K2WP7IUAeAT9gBiI8bF+Y+Ir81Q9MDOHrDrPL5hZH8GFjQwkh+9aljjD "),s("span",{pre:!0,attrs:{class:"token assign-left variable"}},[t._v("nFc")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("\nom8amflncknjroa3cjf9287ka296qfvm.space.\t"),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("3600")]),t._v(" IN\tNSEC3 "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v(" - ONF07RDF2DJM0FDED9AG6MC3HK38HQEJ NS DS RRSIG\nom8amflncknjroa3cjf9287ka296qfvm.space.\t"),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("3600")]),t._v(" IN\tRRSIG NSEC3 "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("8")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("3600")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("20171214011525")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("20171114103910")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("46195")]),t._v(" space. E9xkbsyIh6h+4faNQhAILNNALmF9EPveH5EiGzHPJpyJD0AIMzbcG1Iw b2+ahUtoHYgQjG+oqr/PvCV9ikub0i86WWrxIOwCnBLZG45t/so1P9Cz dQb1hZY39z5b0cv0Swzog/jyQnIQTWjZOgp0ZdP+Vtru+MbFmOtSGfZC "),s("span",{pre:!0,attrs:{class:"token assign-left variable"}},[t._v("zlQ")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" Received "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("582")]),t._v(" bytes from "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("194.169")]),t._v(".218.51"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#53(a.nic.space) in 202 ms")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 上面表示我们从 a.nic.space 这个域名服务器得到了所有可以得知 test.forelax.space 这个域名地址的记录，这里我们看到了两个熟悉的阿里云的 DNS 解析服务器")]),t._v("\n")])])]),s("p",[t._v("也许你会疑惑，这里获取到根服务器的时候，并没有给出 IP 啊，那下一步是怎么知道根服务器的地址的？其实返回的请求里头是带有地址的，只是 "),s("code",[t._v("dig")]),t._v(" 这个命令没有显示出来，用 WireShark 抓取这一次的返回包我们就可以看到返回的内容中是包含有根服务器的 IP 地址的：")]),t._v(" "),s("p",[s("img",{attrs:{src:"/assets/images/2017-12-04-githubpages-with-dns/image-20200922134624760.png",alt:"image-20200922134624760"}})]),t._v(" "),s("h3",{attrs:{id:"当我在阿里云上增加了一条解析记录后-发生了什么"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#当我在阿里云上增加了一条解析记录后-发生了什么"}},[t._v("#")]),t._v(" 当我在阿里云上增加了一条解析记录后，发生了什么？")]),t._v(" "),s("p",[t._v("当我在阿里云控制台增加一条 test.forelax.space 的解析记录后，阿里云在自己搭建的 DNS 解析服务器上，对应增加了一条新的 CNAME 记录。")]),t._v(" "),s("p",[t._v("如何确定呢？还是通过 "),s("code",[t._v("dig")]),t._v(" 命令。上边执行的 "),s("code",[t._v("dig +trace test.forelax.space")]),t._v(" 命令的输出其实最后还有一段：")]),t._v(" "),s("div",{staticClass:"language-sh extra-class"},[s("pre",{pre:!0,attrs:{class:"language-sh"}},[s("code",[t._v("test.forelax.space.\t\t"),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("600")]),t._v("\tIN\tCNAME\tforelaxx.GitHub.io.\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" Received "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("74")]),t._v(" bytes from "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("106.11")]),t._v(".211.57"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#53(dns17.hichina.com) in 9 ms")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 最终，我们从 dns17.hichina.com 这个服务器中得到了我们添加的 CNAME 记录，表示我们如果想知道 test.forelax.space 的")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# IP 地址，只要知道 forelaxx.GitHub.io 的 IP 地址就可以了")]),t._v("\n")])])]),s("h3",{attrs:{id:"在我没有给仓库设置自定义域名时-访问-test-forelax-space-发生了什么"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#在我没有给仓库设置自定义域名时-访问-test-forelax-space-发生了什么"}},[t._v("#")]),t._v(" 在我没有给仓库设置自定义域名时，访问 test.forelax.space，发生了什么？")]),t._v(" "),s("p",[t._v("当我们在浏览器中输入 test.forelax.space 时，如果这个域名浏览器从来没有访问过或者已经超过了之前解析结果的缓存时间，浏览器就会发送一个 DNS 的包去尝试解析这个域名对应的 IP 地址，这个步骤是在浏览器发送 HTTP 包之前完成的。我们可以继续上面的 "),s("code",[t._v("dig +trace test.forelax.space")]),t._v(" 的结果，看看浏览器做了什么。")]),t._v(" "),s("p",[t._v("经过小小的等待，浏览器得知，如果想知道 test.forelax.space 的 IP 地址 ，只要得知 forelaxx.GitHub.io 的 IP 地址即可，于是浏览器继续发 DNS 包查询 forelaxx.GitHub.io 的地址。我们通过 "),s("code",[t._v("dig forelaxx.GitHub.io")]),t._v(" 命令就可以模拟这一步骤：")]),t._v(" "),s("div",{staticClass:"language-sh extra-class"},[s("pre",{pre:!0,attrs:{class:"language-sh"}},[s("code",[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("..")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("..")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" ANSWER SECTION:\nforelaxx.GitHub.io.\t"),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("30")]),t._v("\tIN\tCNAME\tsni.GitHub.map.fastly.net.\nsni.GitHub.map.fastly.net. "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("26")]),t._v("\tIN\tA\t"),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("151.101")]),t._v(".73.147\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("..")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("..")]),t._v("\n")])])]),s("p",[t._v("命令的输出有很多，我们只挑选出我们关心的部分。从上面的结果来看，forelaxx.GitHub.io 的解析又被转到对 sni.GitHub.map.fastly.net 的解析。再经过一番解析，我们拿到了我们所需要的最终的 IP 地址 ——  151.101.73.147 。")]),t._v(" "),s("p",[t._v("当浏览器获得这个 IP 地址后，便利用这个 IP 地址构建 HTTP 请求：")]),t._v(" "),s("p",[s("img",{attrs:{src:"/assets/images/2017-12-04-githubpages-with-dns/image-20200922134636354.png",alt:"image-20200922134636354"}})]),t._v(" "),s("p",[t._v("然而，GitHub 的服务器返回给我们一个 404 的结果。为什么？")]),t._v(" "),s("p",[t._v("答案是，所有人创建的 GitHub pages 静态资源，最终都会部署在同一台服务器上，也就是我们这里看到的 IP 地址为 151.101.73.147 的这台服务器。")]),t._v(" "),s("p",[t._v("我们可以做个尝试，当我执行 "),s("code",[t._v("dig sketchk.xyz")]),t._v("  这条命令时，我得到解析结果依然是 151.101.73.147。")]),t._v(" "),s("p",[t._v("于是对于 IP 地址为 151.101.73.147 的服务器来说，就出现了一个问题：当他接收到一个 HTTP 请求时，他怎么知道到底要返回哪个博客的静态资源呢？")]),t._v(" "),s("h3",{attrs:{id:"在我给仓库设置自定义域名后-访问-test-forelax-space-发生了什么"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#在我给仓库设置自定义域名后-访问-test-forelax-space-发生了什么"}},[t._v("#")]),t._v(" 在我给仓库设置自定义域名后，访问 test.forelax.space，发生了什么？")]),t._v(" "),s("p",[t._v("在设置自定义域名后，我的仓库多出来了一个 CNAME 文件，里面写着我的域名。因此，IP 地址为 151.101.73.147 这台服务器，便得知 forelaxx.GitHub.io 这个域名是需要绑定到 forelax.space 这个域名上的。于是，他便给自己加了一条规则：当接受到的 HTTP 请求中， Host 字段是 forelax.space 时，返回 forelaxx.GitHub.io 对应仓库中的内容。")]),t._v(" "),s("h3",{attrs:{id:"如果我想使坏-把我仓库的自定义域名设置改成别人的-行不行"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#如果我想使坏-把我仓库的自定义域名设置改成别人的-行不行"}},[t._v("#")]),t._v(" 如果我想使坏，把我仓库的自定义域名设置改成别人的，行不行？")]),t._v(" "),s("p",[t._v("答案是 NO，GitHub 不会让你这样做的。在设置里，当我给自定义域名填写 sketchk.xyz 后，页面便不允许我保存了，并提示我这个域名已经被占用了。")]),t._v(" "),s("p",[t._v("即便我在仓库中修改了 CNAME 文件并强行 push 上去，GitHub 也不会根据这个 CNAME 文件做任何事情，并且会在设置项中给出警告：")]),t._v(" "),s("p",[s("img",{attrs:{src:"/assets/images/2017-12-04-githubpages-with-dns/image-20200922134643631.png",alt:"image-20200922134643631"}})]),t._v(" "),s("h3",{attrs:{id:"那如我把自己的域名解析设置成别人的-github-io-的地址-行不行"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#那如我把自己的域名解析设置成别人的-github-io-的地址-行不行"}},[t._v("#")]),t._v(" 那如我把自己的域名解析设置成别人的 GitHub.io 的地址，行不行？")]),t._v(" "),s("p",[t._v("答案也是 NO。")]),t._v(" "),s("p",[t._v("结合上面我们已知的内容，即便你把自己的域名解析改成别人的 GitHub pages 地址也是没有用的，因为别人的仓库中的 CNAME 并没有记录你的域名，所以访问你的域名跳转过去就会显示文章一开头的那个 404 页面。")]),t._v(" "),s("h3",{attrs:{id:"为什么-github-推荐我们给自己的主域名增加两条-a-类型的记录-而不是一条-cname-记录"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#为什么-github-推荐我们给自己的主域名增加两条-a-类型的记录-而不是一条-cname-记录"}},[t._v("#")]),t._v(" 为什么 GitHub 推荐我们给自己的主域名增加两条 A 类型的记录，而不是一条 CNAME 记录？")]),t._v(" "),s("p",[t._v("看到这里，我们可能会想，我们直接给自己的域名添加一条 CNAME 类型的记录，指向我们 GitHub Pages 的地址不就 OK 了？实际尝试以后，发现这个方式也确实可行。但是，在 GitHub 官方给出的自定义域名设置"),s("a",{attrs:{href:"https://help.github.com/articles/setting-up-an-apex-domain/",target:"_blank",rel:"noopener noreferrer"}},[t._v("指南"),s("OutboundLink")],1),t._v("中，建议我们给我们自己的主域名添加两条 A 类型的记录，并且不建议我们直接添加 CNANE 记录：")]),t._v(" "),s("p",[s("img",{attrs:{src:"/assets/images/2017-12-04-githubpages-with-dns/image-20200922134652252.png",alt:"image-20200922134652252"}})]),t._v(" "),s("p",[t._v("这是为什么呢？这里说的『issues with other services』又指的是什么呢？")]),t._v(" "),s("p",[t._v("这个问题直到我使用阿里云的企业邮箱才明白是怎么回事。当你要使用阿里云的企业邮箱时，你需要给你的域名添加一系列新的记录：")]),t._v(" "),s("p",[s("img",{attrs:{src:"/assets/images/2017-12-04-githubpages-with-dns/image-20200922134658504.png",alt:"image-20200922134658504"}})]),t._v(" "),s("p",[t._v("我们可以看到，使用邮箱服务的时候是需要给我们的主域名添加 MX 类型的解析记录的，如果我们使用 CNAME 类型的记录，就无法添加 MX 类型的记录，因为 CNAME 类型的记录不可以和其他任何记录共存，但 A 记录却可以和 MX 类型的记录共存，具体的记录冲突规则见下图：")]),t._v(" "),s("p",[s("img",{attrs:{src:"/assets/images/2017-12-04-githubpages-with-dns/image-20200922134705383.png",alt:"image-20200922134705383"}})]),t._v(" "),s("p",[t._v("所以，GitHub 官方推荐我们添加 A 类型的记录~原因就在这里~")]),t._v(" "),s("h2",{attrs:{id:"参考"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#参考"}},[t._v("#")]),t._v(" 参考")]),t._v(" "),s("ul",[s("li",[s("a",{attrs:{href:"https://en.wikipedia.org/wiki/List_of_DNS_record_types",target:"_blank",rel:"noopener noreferrer"}},[t._v("List of DNS record types"),s("OutboundLink")],1)]),t._v(" "),s("li",[s("a",{attrs:{href:"http://sketchk.xyz/2017/03/24/A-Guide-Of-Making-Your-Personal-Blog-Part-3/",target:"_blank",rel:"noopener noreferrer"}},[t._v("A Guide Of Making Your Personal Blog - Part 3"),s("OutboundLink")],1)]),t._v(" "),s("li",[s("a",{attrs:{href:"https://www.icann.org/registrar-reports/accredited-list.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("ICANN-Accredited Registrars"),s("OutboundLink")],1)]),t._v(" "),s("li",[s("a",{attrs:{href:"http://coolcao.com/2016/10/19/%E4%BB%8E%E6%90%AD%E5%BB%BAhexo%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2%E8%BF%87%E7%A8%8B%E4%B8%AD%E7%90%86%E8%A7%A3%E5%AD%A6%E4%B9%A0DNS%E8%A7%A3%E6%9E%90/",target:"_blank",rel:"noopener noreferrer"}},[t._v("从搭建hexo个人博客过程中理解学习DNS解析"),s("OutboundLink")],1)])])])}),[],!1,null,null,null);s.default=r.exports}}]);